{
	"name": "country",
	"properties": {
		"folder": {
			"name": "User DB"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_Intermiadate_Result",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"linkedService": {
						"referenceName": "LS_V2_USER_DB_PRODUCTION_SERVER",
						"type": "LinkedServiceReference"
					},
					"name": "currency"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "LS_V2_USER_DB_PRODUCTION_SERVER",
						"type": "LinkedServiceReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "join1"
				},
				{
					"name": "select1"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          id as integer,",
				"          iso_country_code as string,",
				"          name as string,",
				"          currency as string,",
				"          updated_at as timestamp,",
				"          created_at as timestamp,",
				"          default_super_market_id as integer,",
				"          currency_precision as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> source1",
				"source(output(",
				"          id as integer,",
				"          created_at as timestamp,",
				"          updated_at as timestamp,",
				"          name as string,",
				"          deleted_at as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table',",
				"     tableName: 'currency',",
				"     schemaName: 'public',",
				"     store: 'postgres',",
				"     isolationLevel: 'READ_UNCOMMITTED') ~> currency",
				"source1, currency join(currency == currency@name,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 select(mapColumn(",
				"          id = source1@id,",
				"          iso_country_code,",
				"          name = source1@name,",
				"          updated_at = source1@updated_at,",
				"          created_at = source1@created_at,",
				"          default_super_market_id,",
				"          currency_precision,",
				"          currency_id = currency@id",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 derive(created_at = coalesce(created_at,'')) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table',",
				"     tableName: 'currency',",
				"     schemaName: 'public',",
				"     deletable: false,",
				"     insertable: true,",
				"     updateable: false,",
				"     upsertable: false,",
				"     store: 'postgres',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          id,",
				"          iso_country_code,",
				"          name,",
				"          updated_at,",
				"          created_at,",
				"          default_super_market_id,",
				"          currency_precision,",
				"          currency_id",
				"     )) ~> sink1"
			]
		}
	}
}