{
	"name": "df_product_cdc",
	"properties": {
		"folder": {
			"name": "Product CDC"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_Intermiadate_Result",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"linkedService": {
						"referenceName": "LS_V2_STAGE",
						"type": "LinkedServiceReference"
					},
					"name": "brand"
				},
				{
					"linkedService": {
						"referenceName": "LS_V2_STAGE",
						"type": "LinkedServiceReference"
					},
					"name": "supplier"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "LS_V2_STAGE",
						"type": "LinkedServiceReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "alterRow1"
				},
				{
					"name": "select1"
				},
				{
					"name": "select2"
				},
				{
					"name": "joiningsuppliercode"
				},
				{
					"name": "joinbrandid"
				}
			],
			"scriptLines": [
				"source(output(",
				"          id as integer,",
				"          tax_category_id as integer,",
				"          refundable as boolean,",
				"          moq_limit as integer,",
				"          meta_title as string,",
				"          loyalty_point as decimal(38,18),",
				"          validity_tag_ar as string,",
				"          validity_tag as string,",
				"          slug as string,",
				"          size as string,",
				"          temp_supplier_code as string,",
				"          name_ar as string,",
				"          name as string,",
				"          meta_keywords_ar as string,",
				"          meta_keywords as string,",
				"          meta_description_ar as string,",
				"          meta_description as string,",
				"          short_description_ar as string,",
				"          long_description_ar as string,",
				"          short_description as string,",
				"          long_description as string,",
				"          issue_loyalty_points as boolean,",
				"          electronic_product_code as integer,",
				"          is_deleted as boolean,",
				"          crushable as boolean,",
				"          created_at as timestamp,",
				"          updated_at as timestamp,",
				"          cod_enabled as boolean,",
				"          available_on as timestamp,",
				"          bundled as boolean,",
				"          bin_category_id as integer,",
				"          default_taxon_id as integer,",
				"          width as decimal(38,18),",
				"          weight_increment as integer,",
				"          weight as decimal(38,18),",
				"          sku as string,",
				"          perform_liquid_weight_check as string,",
				"          max_weight_per_order as integer,",
				"          height as decimal(38,18),",
				"          depth as decimal(38,18),",
				"          default_weight_count as integer,",
				"          promotable as boolean,",
				"          is_wishlisted as boolean,",
				"          is_gluten_free as boolean,",
				"          discount as string,",
				"          deactivate as boolean,",
				"          country_id as integer,",
				"          category_id as integer,",
				"          brand_id as long",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> source1",
				"source(output(",
				"          id as integer,",
				"          name_en as string,",
				"          created_at as timestamp,",
				"          updated_at as timestamp,",
				"          deleted_at as timestamp,",
				"          name_ar as string,",
				"          temp_taxon_id as integer,",
				"          code as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table',",
				"     tableName: 'brand',",
				"     schemaName: 'public',",
				"     store: 'postgres',",
				"     isolationLevel: 'READ_UNCOMMITTED') ~> brand",
				"source(output(",
				"          id as integer,",
				"          created_at as timestamp,",
				"          updated_at as timestamp,",
				"          deleted_at as timestamp,",
				"          code as string,",
				"          name as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table',",
				"     tableName: 'supplier',",
				"     schemaName: 'public',",
				"     store: 'postgres',",
				"     isolationLevel: 'READ_UNCOMMITTED') ~> supplier",
				"joinbrandid alterRow(upsertIf(true())) ~> alterRow1",
				"brand select(mapColumn(",
				"          brand_id = id,",
				"          temp_taxon_id",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"supplier select(mapColumn(",
				"          supplier_id = id,",
				"          supplier_code = name",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"source1, select2 join(temp_supplier_code == supplier_code,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joiningsuppliercode",
				"joiningsuppliercode, select1 join(default_taxon_id == temp_taxon_id,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinbrandid",
				"alterRow1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          id as integer,",
				"          is_deleted as boolean,",
				"          created_at as timestamp,",
				"          updated_at as timestamp,",
				"          name as string,",
				"          discount as string,",
				"          is_wishlisted as boolean,",
				"          price as double,",
				"          sku as string,",
				"          country_id as integer,",
				"          category_id as integer,",
				"          name_ar as string,",
				"          available_on as date,",
				"          electronic_product_code as integer,",
				"          height as double,",
				"          width as double,",
				"          depth as double,",
				"          weight as double,",
				"          issue_loyalty_points as boolean,",
				"          bin_category_id as integer,",
				"          tax_category_id as integer,",
				"          supplier_id as integer,",
				"          manufacturer_id as integer,",
				"          cod_enabled as boolean,",
				"          promotable as boolean,",
				"          refundable as boolean,",
				"          deactivate as boolean,",
				"          validity_tag as string,",
				"          validity_tag_ar as string,",
				"          meta_title as string,",
				"          meta_keywords as string,",
				"          meta_keywords_ar as string,",
				"          slug as string,",
				"          brand_id as integer,",
				"          bundled as boolean,",
				"          size as string,",
				"          perform_liquid_weight_check as boolean,",
				"          weight_increment as integer,",
				"          max_weight_per_order as integer,",
				"          crushable as boolean,",
				"          moq_limit as integer,",
				"          default_weight_count as integer,",
				"          meta_description_ar as string,",
				"          meta_description as string,",
				"          default_taxon_id as integer,",
				"          short_description as string,",
				"          long_description as string,",
				"          short_description_ar as string,",
				"          long_description_ar as string,",
				"          is_gluten_free as boolean,",
				"          loyalty_synced_at as timestamp,",
				"          loyalty_reward_cost as integer,",
				"          loyalty_sync_key as string,",
				"          loyalty_point as double,",
				"          temp_taxon_id as integer,",
				"          temp_supplier_code as string",
				"     ),",
				"     format: 'table',",
				"     tableName: 'product',",
				"     schemaName: 'public',",
				"     deletable: false,",
				"     insertable: false,",
				"     updateable: false,",
				"     upsertable: true,",
				"     keys:['id'],",
				"     store: 'postgres',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          id,",
				"          is_deleted,",
				"          created_at,",
				"          updated_at,",
				"          name,",
				"          discount,",
				"          is_wishlisted,",
				"          sku,",
				"          country_id,",
				"          category_id,",
				"          name_ar,",
				"          available_on,",
				"          electronic_product_code,",
				"          height,",
				"          width,",
				"          depth,",
				"          weight,",
				"          issue_loyalty_points,",
				"          bin_category_id,",
				"          tax_category_id,",
				"          supplier_id,",
				"          cod_enabled,",
				"          promotable,",
				"          refundable,",
				"          deactivate,",
				"          validity_tag,",
				"          validity_tag_ar,",
				"          meta_title,",
				"          meta_keywords,",
				"          meta_keywords_ar,",
				"          slug,",
				"          brand_id = source1@brand_id,",
				"          bundled,",
				"          size,",
				"          perform_liquid_weight_check,",
				"          weight_increment,",
				"          max_weight_per_order,",
				"          crushable,",
				"          moq_limit,",
				"          default_weight_count,",
				"          meta_description_ar,",
				"          meta_description,",
				"          default_taxon_id,",
				"          short_description,",
				"          long_description,",
				"          short_description_ar,",
				"          long_description_ar,",
				"          is_gluten_free,",
				"          loyalty_point,",
				"          temp_taxon_id,",
				"          temp_supplier_code",
				"     )) ~> sink1"
			]
		}
	}
}