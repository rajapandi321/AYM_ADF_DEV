{
	"name": "promotion",
	"properties": {
		"activities": [
			{
				"name": "Copy data1",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "PostgreSqlV2Source",
						"query": "WITH Cte AS (\n  SELECT DISTINCT\n    sp.id,\n    COALESCE(MAX(CASE WHEN spt.locale = 'en' THEN spt.name END), '') AS name_en,\n    MAX(CASE WHEN spt.locale = 'en' THEN spt.description END) AS description_en,\n    COALESCE(MAX(CASE WHEN spt.locale = 'ar' THEN spt.name END), '') AS name_ar,\n    MAX(CASE WHEN spt.locale = 'ar' THEN spt.description END) AS description_ar,\n    UPPER(REGEXP_REPLACE(TRANSLATE(MAX(CASE WHEN spt.locale = 'en' THEN spt.name END), ' ', '_'), '[^a-zA-Z0-9_]', '', 'g')) AS code,\n    sp.expires_at,\n    sp.starts_at,\n    COALESCE(sp.usage_limit, 0) AS usage_limit,\n    sp.match_policy,\n    sp.created_at,\n    sp.updated_at,\n    sp.per_code_usage_limit,\n    sp.apply_automatically,\n    sp.deleted_at,\n    TRUE AS is_visible\n  FROM spree_promotions AS sp\n  LEFT JOIN spree_promotion_translations AS spt ON spt.spree_promotion_id = sp.id\n  WHERE spt.name IS NOT NULL\n  GROUP BY sp.id\n  ORDER BY sp.id ASC\n)\nSELECT\n  id,\n  name_en,\n  description_en,\n  name_ar,\n  description_ar,\n  code,\n  expires_at,\n  starts_at,\n  usage_limit,\n  match_policy,\n  created_at,\n  updated_at,\n  per_code_usage_limit,\n  apply_automatically,\n  deleted_at,\n  is_visible\nFROM (\n  SELECT\n    id,\n    name_en,\n    description_en,\n    name_ar,\n    description_ar,\n    code,\n    expires_at,\n    starts_at,\n    usage_limit,\n    match_policy,\n    created_at,\n    updated_at,\n    per_code_usage_limit,\n    apply_automatically,\n    deleted_at,\n    is_visible,\n    ROW_NUMBER() OVER (PARTITION BY name_en ORDER BY id) AS rn\n  FROM Cte\n) AS temp\nWHERE rn = 1\nORDER BY name_en;"
					},
					"sink": {
						"type": "AzurePostgreSQLSink",
						"writeBatchSize": 1000000,
						"writeBatchTimeout": "00:30:00",
						"writeMethod": "CopyCommand"
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "id",
									"type": "Int32",
									"physicalType": "integer"
								},
								"sink": {
									"name": "id",
									"type": "Int32",
									"physicalType": "integer"
								}
							},
							{
								"source": {
									"name": "name_en",
									"type": "String",
									"physicalType": "text"
								},
								"sink": {
									"name": "name_en",
									"type": "String",
									"physicalType": "character varying"
								}
							},
							{
								"source": {
									"name": "name_ar",
									"type": "String",
									"physicalType": "text"
								},
								"sink": {
									"name": "name_ar",
									"type": "String",
									"physicalType": "character varying"
								}
							},
							{
								"source": {
									"name": "description_en",
									"type": "String",
									"physicalType": "text"
								},
								"sink": {
									"name": "description_en",
									"type": "String",
									"physicalType": "text"
								}
							},
							{
								"source": {
									"name": "description_ar",
									"type": "String",
									"physicalType": "text"
								},
								"sink": {
									"name": "description_ar",
									"type": "String",
									"physicalType": "text"
								}
							},
							{
								"source": {
									"name": "per_code_usage_limit",
									"type": "Int32",
									"physicalType": "integer"
								},
								"sink": {
									"name": "per_code_usage_limit",
									"type": "Int32",
									"physicalType": "integer"
								}
							},
							{
								"source": {
									"name": "usage_limit",
									"type": "Int32",
									"physicalType": "integer"
								},
								"sink": {
									"name": "usage_limit",
									"type": "Int32",
									"physicalType": "integer"
								}
							},
							{
								"source": {
									"name": "starts_at",
									"type": "DateTime",
									"physicalType": "timestamp without time zone"
								},
								"sink": {
									"name": "starts_at",
									"type": "DateTime",
									"physicalType": "timestamp without time zone"
								}
							},
							{
								"source": {
									"name": "expires_at",
									"type": "DateTime",
									"physicalType": "timestamp without time zone"
								},
								"sink": {
									"name": "expires_at",
									"type": "DateTime",
									"physicalType": "timestamp without time zone"
								}
							},
							{
								"source": {
									"name": "apply_automatically",
									"type": "Boolean",
									"physicalType": "boolean"
								},
								"sink": {
									"name": "apply_automatically",
									"type": "Boolean",
									"physicalType": "boolean"
								}
							},
							{
								"source": {
									"name": "is_visible",
									"type": "Boolean",
									"physicalType": "boolean"
								},
								"sink": {
									"name": "is_visible",
									"type": "Boolean",
									"physicalType": "boolean"
								}
							},
							{
								"source": {
									"name": "created_at",
									"type": "DateTime",
									"physicalType": "timestamp without time zone"
								},
								"sink": {
									"name": "created_at",
									"type": "DateTime",
									"physicalType": "timestamp without time zone"
								}
							},
							{
								"source": {
									"name": "updated_at",
									"type": "DateTime",
									"physicalType": "timestamp without time zone"
								},
								"sink": {
									"name": "updated_at",
									"type": "DateTime",
									"physicalType": "timestamp without time zone"
								}
							},
							{
								"source": {
									"name": "deleted_at",
									"type": "DateTime",
									"physicalType": "timestamp without time zone"
								},
								"sink": {
									"name": "deleted_at",
									"type": "DateTime",
									"physicalType": "timestamp without time zone"
								}
							},
							{
								"source": {
									"name": "match_policy",
									"type": "String",
									"physicalType": "character varying"
								},
								"sink": {
									"name": "match_policy",
									"type": "String",
									"physicalType": "character varying"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DS_V1_PRODUCTION",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "DS_V2_PRODUCT_DB_PRODUCTION",
						"type": "DatasetReference",
						"parameters": {
							"table_name": "promotion"
						}
					}
				]
			}
		],
		"folder": {
			"name": "Product DB"
		},
		"annotations": []
	}
}