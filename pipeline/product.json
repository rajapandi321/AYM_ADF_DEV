{
	"name": "product",
	"properties": {
		"activities": [
			{
				"name": "Copy data1",
				"type": "Copy",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [
					{
						"activity": "addsuppliercodecolumn",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "PostgreSqlV2Source",
						"query": "WITH brand AS (\r\n  SELECT \r\n    rt.id,\r\n    COALESCE(rt.name_en,'') AS name_en,\r\n    COALESCE(\r\n      CASE\r\n        WHEN LENGTH(rt.name_en) < 5 THEN \r\n          UPPER(REGEXP_REPLACE(TRANSLATE(rt.name_en, ' ', '_'), '[^a-zA-Z0-9_]', '', 'g')) || '_' || rt.id\r\n        ELSE \r\n          UPPER(SUBSTRING(REGEXP_REPLACE(TRANSLATE(rt.name_en, ' ', ''), '[^a-zA-Z0-9]', '', 'g'), 1, 1)) ||\r\n          UPPER(SUBSTRING(REGEXP_REPLACE(SUBSTRING(REGEXP_REPLACE(TRANSLATE(rt.name_en, ' ', ''), '[^a-zA-Z0-9]', ' ', 'g'), 2), ' ', ''), 1, 1)) ||\r\n          '_' || rt.id\r\n      END, \r\n    '') AS code,\r\n    rt.created_at,\r\n    rt.updated_at,\r\n    rt.temp_taxon_id,\r\n    COALESCE(rt.name_ar, '') AS name_ar\r\n  FROM (\r\n    SELECT \r\n      ROW_NUMBER() OVER () AS id,\r\n      st.id AS temp_taxon_id,\r\n      MAX(CASE WHEN stt.locale = 'en' THEN stt.name END) AS name_en,\r\n      MAX(CASE WHEN stt.locale = 'ar' THEN stt.name END) AS name_ar,\r\n      st.created_at,\r\n      st.updated_at\r\n    FROM spree_taxons st\r\n    LEFT JOIN spree_taxon_translations stt ON stt.spree_taxon_id = st.id\r\n    WHERE st.parent_id IN (\r\n      SELECT st.id \r\n      FROM spree_taxons st \r\n      JOIN spree_taxon_translations stt ON stt.spree_taxon_id = st.id AND stt.locale = 'en'\r\n      WHERE stt.name = 'Brands'\r\n    )\r\n    GROUP BY st.id\r\n  ) AS rt\r\n  ORDER BY rt.temp_taxon_id ASC\r\n), \r\nsupplier AS (\r\n  SELECT \r\n    REGEXP_REPLACE(MAX(COALESCE(spt.supplier_name,'')), '-[0-9]+$', '') AS name,\r\n    LEFT(COALESCE(spt.code, ''), 10) AS code,\r\n    MAX(spt.created_at) AS created_at,\r\n    MAX(spt.updated_at) AS updated_at,\r\n    MAX(spt.deleted_at) AS deleted_at\r\n  FROM (\r\n    SELECT\r\n      spree_product_id,\r\n      MAX(CASE WHEN locale = 'en' THEN manufacturer END) AS supplier_name,\r\n      MAX(CASE WHEN locale = 'ar' THEN manufacturer END) AS code,\r\n      MAX(created_at) AS created_at,\r\n      MAX(updated_at) AS updated_at,\r\n      MAX(deleted_at) AS deleted_at\r\n    FROM spree_product_translations\r\n    WHERE manufacturer IS NOT NULL\r\n    GROUP BY spree_product_id\r\n  ) AS spt\r\n  GROUP BY spt.code\r\n), \r\ncte AS (\r\n  SELECT \r\n    sp.id,\r\n    sp.tax_category_id,\r\n    sp.refundable,\r\n    sp.moq_limit,\r\n    sp.meta_title,\r\n    sp.loyalty_point,\r\n    sp_table.validity_tag_ar,\r\n    sp_table.validity_tag,\r\n    sp_table.slug,\r\n    sp_table.size,\r\n\tREGEXP_REPLACE(MAX(COALESCE(sp_table.supplier_name,'')), '-[0-9]+$', '') AS supplier_code,\r\n    COALESCE(sp_table.name_ar, '') AS name_ar,\r\n    COALESCE(sp_table.name, '') AS name,\r\n    COALESCE(sp_table.meta_keywords_ar, '') AS meta_keywords_ar,\r\n    COALESCE(sp_table.meta_keywords, '') AS meta_keywords,\r\n    COALESCE(sp_table.meta_description_ar, '') AS meta_description_ar,\r\n    COALESCE(sp_table.meta_description, '') AS meta_description,\r\n    COALESCE(sp_table.short_description_ar, '') AS short_description_ar,\r\n    COALESCE(sp_table.long_description_ar, '') AS long_description_ar,\r\n    COALESCE(sp_table.short_description, '') AS short_description,\r\n    COALESCE(sp_table.long_description, '') AS long_description,\r\n    COALESCE(sp.is_loyalty_reward, 'false') AS issue_loyalty_points,\r\n    CASE\r\n      WHEN sp.electronic_product_code = '' THEN NULL \r\n      ELSE CAST(sp.electronic_product_code AS INT)\r\n    END AS electronic_product_code,\r\n    CASE\r\n      WHEN sp.deleted_at IS NOT NULL THEN TRUE\r\n      ELSE FALSE\r\n    END AS is_deleted,\r\n    COALESCE(sp.crushable, false) AS crushable,\r\n    sp.created_at,\r\n    sp.updated_at,\r\n    sp.cod_enabled,\r\n    COALESCE(CAST(sp.available_on AS DATE), CAST(CURRENT_TIMESTAMP AS DATE)) AS available_on,\r\n    sp.bundled,\r\n    sp.bin_category_id,\r\n    brand_taxon.temp_taxon_id AS default_taxon_id,\r\n    sv.width,\r\n    sv.weight_increment,\r\n    sv.weight,\r\n    sv.sku,\r\n    case when\r\n    CAST(sv.perform_liquid_weight_check AS INT) = 0 Then 'False'\r\n    ELSE 'True'\r\n    END AS perform_liquid_weight_check,\r\n    sv.max_weight_per_order,\r\n    sv.height,\r\n    sv.depth,\r\n    sv.default_weight_count,\r\n    FALSE AS promotable,\r\n    TRUE AS is_wishlisted,\r\n    FALSE AS is_gluten_free,\r\n    '' AS discount,\r\n    FALSE AS deactivate,\r\n    ds_country.country_id,\r\n    1 AS category_id,\r\n    brand_taxon.brand_id AS brand_id\r\n  FROM spree_products sp\r\n  LEFT JOIN (\r\n    SELECT\r\n      sp.id,\r\n\t  MAX(CASE WHEN locale = 'en' THEN manufacturer END) as supplier_name,\r\n      MAX(CASE WHEN sptrans.locale = 'ar' THEN sptrans.validity_tag END) AS validity_tag_ar,\r\n      MAX(CASE WHEN sptrans.locale = 'en' THEN sptrans.validity_tag END) AS validity_tag,\r\n      MAX(sptrans.slug) AS slug,\r\n      MAX(sptrans.pack_size) AS size,\r\n      MAX(CASE WHEN sptrans.locale = 'ar' THEN sptrans.name END) AS name_ar,\r\n      MAX(CASE WHEN sptrans.locale = 'en' THEN sptrans.name END) AS name,\r\n      MAX(CASE WHEN sptrans.locale = 'ar' THEN sptrans.meta_keywords END) AS meta_keywords_ar,\r\n      MAX(CASE WHEN sptrans.locale = 'en' THEN sptrans.meta_keywords END) AS meta_keywords,\r\n      MAX(CASE WHEN sptrans.locale = 'ar' THEN sptrans.meta_description END) AS meta_description_ar,\r\n      MAX(CASE WHEN sptrans.locale = 'en' THEN sptrans.meta_description END) AS meta_description,\r\n      MAX(CASE WHEN sptrans.locale = 'ar' THEN sptrans.description END) AS short_description_ar,\r\n      MAX(CASE WHEN sptrans.locale = 'ar' THEN sptrans.description END) AS long_description_ar,\r\n      MAX(CASE WHEN sptrans.locale = 'en' THEN sptrans.description END) AS short_description,\r\n      MAX(CASE WHEN sptrans.locale = 'en' THEN sptrans.description END) AS long_description,\r\n      MAX(CASE WHEN sptrans.locale = 'ar' THEN sptrans.manufacturer END) AS supplier_code\r\n    FROM spree_products sp\r\n    LEFT JOIN spree_product_translations sptrans ON sptrans.spree_product_id = sp.id\r\n    GROUP BY sp.id\r\n  ) AS sp_table ON sp_table.id = sp.id\r\n  LEFT JOIN (\r\n    SELECT \r\n      sp.id, \r\n      db.country_id \r\n    FROM spree_products sp\r\n    LEFT JOIN spree_product_inventory_modifiers sim ON sp.id = sim.product_id\r\n    LEFT JOIN danube_supermarkets db ON sim.rule_supermarket_id = db.id\r\n    GROUP BY sp.id, db.country_id\r\n  ) AS ds_country ON sp.id = ds_country.id\r\n  LEFT JOIN (\r\n    SELECT \r\n      ROW_NUMBER() OVER (PARTITION BY prod_taxon.product_id ORDER BY b.created_at DESC) AS row_num,\r\n      b.temp_taxon_id,\r\n      b.id AS brand_id, \r\n      prod_taxon.product_id AS product_id\r\n    FROM brand b \r\n    LEFT JOIN spree_products_taxons prod_taxon ON b.temp_taxon_id = prod_taxon.taxon_id\r\n  ) AS brand_taxon ON brand_taxon.product_id = sp.id\r\n  LEFT JOIN (\r\n    SELECT \r\n      ROW_NUMBER() OVER (PARTITION BY product_id ORDER BY created_at DESC) AS row_num, \r\n      *\r\n    FROM spree_variants \r\n  ) sv ON sv.product_id = sp.id\r\n  LEFT JOIN supplier sup ON sup.code = sp_table.supplier_code AND sup.code != ''\r\n  WHERE (brand_taxon.row_num = 1 OR brand_taxon.row_num IS NULL) \r\n    AND (sv.row_num = 1 OR sv.row_num IS NULL)\r\nGROUP BY \r\n        sp.id, \r\n        sp.tax_category_id,\r\n        sp.refundable,\r\n        sp.moq_limit,\r\n        sp.meta_title,\r\n        sp.loyalty_point,\r\n        sp_table.validity_tag_ar,\r\n        sp_table.validity_tag,\r\n        sp_table.slug,\r\n\t\tbrand_taxon.temp_taxon_id,\r\n        sp_table.size,\r\n        sp_table.supplier_name,\r\n        sp_table.name_ar,\r\n        sp_table.name,\r\n        sp_table.meta_keywords_ar,\r\n        sp_table.meta_keywords,\r\n        sp_table.meta_description_ar,\r\n        sp_table.meta_description,\r\n        sp_table.short_description_ar,\r\n        sp_table.long_description_ar,\r\n        sp_table.short_description,\r\n        sp_table.long_description,\r\n        sp.is_loyalty_reward,\r\n\t\t    brand_taxon.brand_id,\r\n        sp.electronic_product_code,\r\n        sp.deleted_at,\r\n        sp.crushable,\r\n        sp.created_at,\r\n        sp.updated_at,\r\n        sp.cod_enabled,\r\n        sp.available_on,\r\n        sp.bundled,\r\n        sp.bin_category_id,\r\n        sv.width,\r\n        sv.weight_increment,\r\n        sv.weight,\r\n        sv.sku,\r\n        sv.perform_liquid_weight_check,\r\n        sv.max_weight_per_order,\r\n        sv.height,\r\n        sv.depth,\r\n        sv.default_weight_count,\r\n        ds_country.country_id\r\n)\r\nSELECT \r\n  filtered_cte.id,\r\n    filtered_cte.tax_category_id,\r\n    filtered_cte.refundable,\r\n    filtered_cte.moq_limit,\r\n    filtered_cte.meta_title,\r\n    filtered_cte.loyalty_point,\r\n    filtered_cte.validity_tag_ar,\r\n    filtered_cte.validity_tag,\r\n    filtered_cte.slug,\r\n    filtered_cte.size,\r\n\tfiltered_cte.supplier_code as temp_supplier_code,\r\n    filtered_cte.name_ar,\r\n    filtered_cte.name,\r\n    filtered_cte.meta_keywords_ar,\r\n    filtered_cte.meta_keywords,\r\n    filtered_cte.meta_description_ar,\r\n    filtered_cte.meta_description,\r\n    filtered_cte.short_description_ar,\r\n    filtered_cte.long_description_ar,\r\n    filtered_cte.short_description,\r\n    filtered_cte.long_description,\r\n    filtered_cte.issue_loyalty_points,\r\n    filtered_cte.electronic_product_code,\r\n    filtered_cte.is_deleted,\r\n    filtered_cte.crushable,\r\n    filtered_cte.created_at,\r\n    filtered_cte.updated_at,\r\n    filtered_cte.cod_enabled,\r\n    filtered_cte.available_on,\r\n    filtered_cte.bundled,\r\n    filtered_cte.bin_category_id,\r\n    filtered_cte.default_taxon_id,\r\n    filtered_cte.width,\r\n    filtered_cte.weight_increment,\r\n    filtered_cte.weight,\r\n    filtered_cte.sku,\r\n    filtered_cte.perform_liquid_weight_check,\r\n    filtered_cte.max_weight_per_order,\r\n    filtered_cte.height,\r\n    filtered_cte.depth,\r\n    filtered_cte.default_weight_count,\r\n    filtered_cte.promotable,\r\n    filtered_cte.is_wishlisted,\r\n    filtered_cte.is_gluten_free,\r\n    filtered_cte.discount,\r\n    filtered_cte.deactivate,\r\n    filtered_cte.country_id,\r\n    filtered_cte.category_id,\r\n    filtered_cte.brand_id\r\nFROM (\r\n  SELECT \r\n    cte.*,\r\n    ROW_NUMBER() OVER (PARTITION BY id ORDER BY country_id) AS rn \r\n  FROM cte\r\n) filtered_cte\r\nWHERE rn = 1;"
					},
					"sink": {
						"type": "AzurePostgreSQLSink",
						"writeBatchSize": 1000000,
						"writeBatchTimeout": "00:30:00",
						"preCopyScript": "ALTER TABLE product ADD COLUMN temp_taxon_id INT;",
						"writeMethod": "CopyCommand"
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "id",
									"type": "Int32",
									"physicalType": "integer"
								},
								"sink": {
									"name": "id",
									"type": "Int32",
									"physicalType": "integer"
								}
							},
							{
								"source": {
									"name": "is_deleted",
									"type": "Boolean",
									"physicalType": "boolean"
								},
								"sink": {
									"name": "is_deleted",
									"type": "Boolean",
									"physicalType": "boolean"
								}
							},
							{
								"source": {
									"name": "created_at",
									"type": "DateTime",
									"physicalType": "timestamp without time zone"
								},
								"sink": {
									"name": "created_at",
									"type": "DateTime",
									"physicalType": "timestamp without time zone"
								}
							},
							{
								"source": {
									"name": "updated_at",
									"type": "DateTime",
									"physicalType": "timestamp without time zone"
								},
								"sink": {
									"name": "updated_at",
									"type": "DateTime",
									"physicalType": "timestamp without time zone"
								}
							},
							{
								"source": {
									"name": "name",
									"type": "String",
									"physicalType": "text"
								},
								"sink": {
									"name": "name",
									"type": "String",
									"physicalType": "character varying"
								}
							},
							{
								"source": {
									"name": "discount",
									"type": "String",
									"physicalType": "text"
								},
								"sink": {
									"name": "discount",
									"type": "String",
									"physicalType": "character varying"
								}
							},
							{
								"source": {
									"name": "is_wishlisted",
									"type": "Boolean",
									"physicalType": "boolean"
								},
								"sink": {
									"name": "is_wishlisted",
									"type": "Boolean",
									"physicalType": "boolean"
								}
							},
							{
								"source": {
									"name": "sku",
									"type": "String",
									"physicalType": "character varying"
								},
								"sink": {
									"name": "sku",
									"type": "String",
									"physicalType": "character varying"
								}
							},
							{
								"source": {
									"name": "country_id",
									"type": "Int32",
									"physicalType": "integer"
								},
								"sink": {
									"name": "country_id",
									"type": "Int32",
									"physicalType": "integer"
								}
							},
							{
								"source": {
									"name": "category_id",
									"type": "Int32",
									"physicalType": "integer"
								},
								"sink": {
									"name": "category_id",
									"type": "Int32",
									"physicalType": "integer"
								}
							},
							{
								"source": {
									"name": "name_ar",
									"type": "String",
									"physicalType": "text"
								},
								"sink": {
									"name": "name_ar",
									"type": "String",
									"physicalType": "character varying"
								}
							},
							{
								"source": {
									"name": "available_on",
									"type": "DateTime",
									"physicalType": "date"
								},
								"sink": {
									"name": "available_on",
									"type": "DateTime",
									"physicalType": "date"
								}
							},
							{
								"source": {
									"name": "electronic_product_code",
									"type": "Int32",
									"physicalType": "integer"
								},
								"sink": {
									"name": "electronic_product_code",
									"type": "Int32",
									"physicalType": "integer"
								}
							},
							{
								"source": {
									"name": "height",
									"type": "Decimal",
									"physicalType": "numeric"
								},
								"sink": {
									"name": "height",
									"type": "Double",
									"physicalType": "double precision"
								}
							},
							{
								"source": {
									"name": "width",
									"type": "Decimal",
									"physicalType": "numeric"
								},
								"sink": {
									"name": "width",
									"type": "Double",
									"physicalType": "double precision"
								}
							},
							{
								"source": {
									"name": "depth",
									"type": "Decimal",
									"physicalType": "numeric"
								},
								"sink": {
									"name": "depth",
									"type": "Double",
									"physicalType": "double precision"
								}
							},
							{
								"source": {
									"name": "weight",
									"type": "Decimal",
									"physicalType": "numeric"
								},
								"sink": {
									"name": "weight",
									"type": "Double",
									"physicalType": "double precision"
								}
							},
							{
								"source": {
									"name": "issue_loyalty_points",
									"type": "Boolean",
									"physicalType": "boolean"
								},
								"sink": {
									"name": "issue_loyalty_points",
									"type": "Boolean",
									"physicalType": "boolean"
								}
							},
							{
								"source": {
									"name": "bin_category_id",
									"type": "Int32",
									"physicalType": "integer"
								},
								"sink": {
									"name": "bin_category_id",
									"type": "Int32",
									"physicalType": "integer"
								}
							},
							{
								"source": {
									"name": "tax_category_id",
									"type": "Int32",
									"physicalType": "integer"
								},
								"sink": {
									"name": "tax_category_id",
									"type": "Int32",
									"physicalType": "integer"
								}
							},
							{
								"source": {
									"name": "cod_enabled",
									"type": "Boolean",
									"physicalType": "boolean"
								},
								"sink": {
									"name": "cod_enabled",
									"type": "Boolean",
									"physicalType": "boolean"
								}
							},
							{
								"source": {
									"name": "promotable",
									"type": "Boolean",
									"physicalType": "boolean"
								},
								"sink": {
									"name": "promotable",
									"type": "Boolean",
									"physicalType": "boolean"
								}
							},
							{
								"source": {
									"name": "refundable",
									"type": "Boolean",
									"physicalType": "boolean"
								},
								"sink": {
									"name": "refundable",
									"type": "Boolean",
									"physicalType": "boolean"
								}
							},
							{
								"source": {
									"name": "deactivate",
									"type": "Boolean",
									"physicalType": "boolean"
								},
								"sink": {
									"name": "deactivate",
									"type": "Boolean",
									"physicalType": "boolean"
								}
							},
							{
								"source": {
									"name": "validity_tag",
									"type": "String",
									"physicalType": "text"
								},
								"sink": {
									"name": "validity_tag",
									"type": "String",
									"physicalType": "character varying"
								}
							},
							{
								"source": {
									"name": "validity_tag_ar",
									"type": "String",
									"physicalType": "text"
								},
								"sink": {
									"name": "validity_tag_ar",
									"type": "String",
									"physicalType": "character varying"
								}
							},
							{
								"source": {
									"name": "meta_title",
									"type": "String",
									"physicalType": "character varying"
								},
								"sink": {
									"name": "meta_title",
									"type": "String",
									"physicalType": "character varying"
								}
							},
							{
								"source": {
									"name": "meta_keywords",
									"type": "String",
									"physicalType": "text"
								},
								"sink": {
									"name": "meta_keywords",
									"type": "String",
									"physicalType": "character varying"
								}
							},
							{
								"source": {
									"name": "meta_keywords_ar",
									"type": "String",
									"physicalType": "text"
								},
								"sink": {
									"name": "meta_keywords_ar",
									"type": "String",
									"physicalType": "character varying"
								}
							},
							{
								"source": {
									"name": "slug",
									"type": "String",
									"physicalType": "text"
								},
								"sink": {
									"name": "slug",
									"type": "String",
									"physicalType": "character varying"
								}
							},
							{
								"source": {
									"name": "brand_id",
									"type": "Int64",
									"physicalType": "bigint"
								},
								"sink": {
									"name": "brand_id",
									"type": "Int32",
									"physicalType": "integer"
								}
							},
							{
								"source": {
									"name": "bundled",
									"type": "Boolean",
									"physicalType": "boolean"
								},
								"sink": {
									"name": "bundled",
									"type": "Boolean",
									"physicalType": "boolean"
								}
							},
							{
								"source": {
									"name": "size",
									"type": "String",
									"physicalType": "text"
								},
								"sink": {
									"name": "size",
									"type": "String",
									"physicalType": "character varying"
								}
							},
							{
								"source": {
									"name": "perform_liquid_weight_check",
									"type": "String",
									"physicalType": "text"
								},
								"sink": {
									"name": "perform_liquid_weight_check",
									"type": "Boolean",
									"physicalType": "boolean"
								}
							},
							{
								"source": {
									"name": "weight_increment",
									"type": "Int32",
									"physicalType": "integer"
								},
								"sink": {
									"name": "weight_increment",
									"type": "Int32",
									"physicalType": "integer"
								}
							},
							{
								"source": {
									"name": "max_weight_per_order",
									"type": "Int32",
									"physicalType": "integer"
								},
								"sink": {
									"name": "max_weight_per_order",
									"type": "Int32",
									"physicalType": "integer"
								}
							},
							{
								"source": {
									"name": "crushable",
									"type": "Boolean",
									"physicalType": "boolean"
								},
								"sink": {
									"name": "crushable",
									"type": "Boolean",
									"physicalType": "boolean"
								}
							},
							{
								"source": {
									"name": "moq_limit",
									"type": "Int32",
									"physicalType": "integer"
								},
								"sink": {
									"name": "moq_limit",
									"type": "Int32",
									"physicalType": "integer"
								}
							},
							{
								"source": {
									"name": "default_weight_count",
									"type": "Int32",
									"physicalType": "integer"
								},
								"sink": {
									"name": "default_weight_count",
									"type": "Int32",
									"physicalType": "integer"
								}
							},
							{
								"source": {
									"name": "meta_description_ar",
									"type": "String",
									"physicalType": "text"
								},
								"sink": {
									"name": "meta_description_ar",
									"type": "String",
									"physicalType": "text"
								}
							},
							{
								"source": {
									"name": "meta_description",
									"type": "String",
									"physicalType": "text"
								},
								"sink": {
									"name": "meta_description",
									"type": "String",
									"physicalType": "text"
								}
							},
							{
								"source": {
									"name": "default_taxon_id",
									"type": "Int32",
									"physicalType": "integer"
								},
								"sink": {
									"name": "default_taxon_id",
									"type": "Int32",
									"physicalType": "integer"
								}
							},
							{
								"source": {
									"name": "short_description",
									"type": "String",
									"physicalType": "text"
								},
								"sink": {
									"name": "short_description",
									"type": "String",
									"physicalType": "text"
								}
							},
							{
								"source": {
									"name": "long_description",
									"type": "String",
									"physicalType": "text"
								},
								"sink": {
									"name": "long_description",
									"type": "String",
									"physicalType": "text"
								}
							},
							{
								"source": {
									"name": "short_description_ar",
									"type": "String",
									"physicalType": "text"
								},
								"sink": {
									"name": "short_description_ar",
									"type": "String",
									"physicalType": "text"
								}
							},
							{
								"source": {
									"name": "long_description_ar",
									"type": "String",
									"physicalType": "text"
								},
								"sink": {
									"name": "long_description_ar",
									"type": "String",
									"physicalType": "text"
								}
							},
							{
								"source": {
									"name": "is_gluten_free",
									"type": "Boolean",
									"physicalType": "boolean"
								},
								"sink": {
									"name": "is_gluten_free",
									"type": "Boolean",
									"physicalType": "boolean"
								}
							},
							{
								"source": {
									"name": "loyalty_point",
									"type": "Decimal",
									"physicalType": "numeric"
								},
								"sink": {
									"name": "loyalty_point",
									"type": "Double",
									"physicalType": "double precision"
								}
							},
							{
								"source": {
									"name": "temp_supplier_code",
									"type": "String",
									"physicalType": "text"
								},
								"sink": {
									"name": "temp_supplier_code",
									"type": "String",
									"physicalType": "character varying"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DS_V1_PRODUCTION",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "DS_V2_PRODUCT_DB_PRODUCTION",
						"type": "DatasetReference",
						"parameters": {
							"table_name": "product"
						}
					}
				]
			},
			{
				"name": "updatetemptaxonid",
				"type": "Lookup",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [
					{
						"activity": "Copy data1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzurePostgreSqlSource",
						"query": "WITH cte AS (\r\n    SELECT st.product_id, st.taxon_id AS temp_taxon_id\r\n    FROM product_taxon st\r\n)\r\nUPDATE product p\r\nSET temp_taxon_id = cte.temp_taxon_id\r\nFROM cte\r\nWHERE p.id = cte.product_id;\r\nSELECT 'Updating Temp Taxon ID' AS Message;",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_V2_PRODUCT_DB_PRODUCTION",
						"type": "DatasetReference",
						"parameters": {
							"table_name": "product"
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "updatesupplierID",
				"type": "Lookup",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [
					{
						"activity": "updatetemptaxonid",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzurePostgreSqlSource",
						"query": "With cte AS\n  (select id, name as supplier_code \n  from supplier\n)\nUPDATE product p\nSET supplier_id = cte.id\nFROM cte\nWHERE p.temp_supplier_code = cte.supplier_code;\nSELECT 'Update Supplier ID' as ID;",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_V2_PRODUCT_DB_PRODUCTION",
						"type": "DatasetReference",
						"parameters": {
							"table_name": "product"
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "addsuppliercodecolumn",
				"type": "Lookup",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzurePostgreSqlSource",
						"query": "Alter table product add column temp_supplier_code varchar(20);\nSELECT 'Adding Supplier_Code' As Update",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_V2_PRODUCT_DB_PRODUCTION",
						"type": "DatasetReference",
						"parameters": {
							"table_name": "product"
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "updatebrandID",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "updatesupplierID",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzurePostgreSqlSource",
						"query": "with cte as(\r\n    select id, temp_taxon_id\r\n    from brand\r\n)\r\nupdate product p set p.brand_id = cte.id\r\nwhere p.temp_taxon_id = cte.temp_taxon_id;",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_V2_PRODUCT_DB_PRODUCTION",
						"type": "DatasetReference",
						"parameters": {
							"table_name": "product"
						}
					},
					"firstRowOnly": false
				}
			}
		],
		"folder": {
			"name": "Product DB"
		},
		"annotations": []
	}
}