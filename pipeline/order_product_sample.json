{
	"name": "order_product_sample",
	"properties": {
		"activities": [
			{
				"name": "Copy data1",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "PostgreSqlV2Source",
						"query": "WITH inventory_units AS (\n    SELECT \n        line_item_id, \n        state, \n        COUNT(id) AS quantity_count\n    FROM spree_inventory_units \n    WHERE state != 'canceled'\n    GROUP BY line_item_id, state\n),\nlatest_inventory_units AS (\n    SELECT DISTINCT ON (line_item_id) * \n    FROM spree_inventory_units\n    ORDER BY line_item_id, updated_at DESC\n),\npicked_items_summary AS (\n    SELECT \n        pickable_id, \n        COALESCE(SUM(quantity), 0) AS picked_quantity\n    FROM spree_picked_items \n    GROUP BY pickable_id\n)\nSELECT\n    a.id, \n    a.variant_id AS product_variant_id,\n    COALESCE(siu.quantity_count, 0) AS quantity,\n    a.price,\n    a.created_at,\n    a.updated_at,\n    CASE \n        WHEN a.on_sale = false THEN a.price\n        ELSE '0.0'\n    END AS action_price,\n    CASE \n        WHEN a.on_sale = true THEN a.price\n        ELSE '0'\n    END AS sale_price,\n    b.product_id,\n    CASE\n      WHEN d.replace_product::varchar = 'true' THEN 'replace-with-similar-product' \n      WHEN d.replace_product::varchar = 'false' THEN 'cancel'\n      ELSE NULL\n    END AS replacement_pref,\n    COALESCE(pis.picked_quantity, 0) AS picked_quantity,\n    0 AS picker_id,\n    COALESCE(c.shipment_id, 0) AS order_shipment_id,\n    1 AS category_id, -- default value = 1 (grocery id from category table)\n    '' AS status\nFROM spree_line_items a \nLEFT JOIN spree_variants b ON b.id = a.variant_id\nLEFT JOIN latest_inventory_units c ON c.line_item_id = a.id\nLEFT JOIN inventory_units siu ON siu.line_item_id = a.id\nLEFT JOIN spree_orders d ON d.id = c.order_id\nLEFT JOIN picked_items_summary pis ON pis.pickable_id = a.id\nGROUP BY\n    a.id, \n    a.variant_id,\n    a.price,\n    a.created_at,\n    a.updated_at,\n    a.on_sale,\n    b.product_id,\n    d.replace_product,\n    c.shipment_id,\n    siu.quantity_count\nORDER BY a.id;"
					},
					"sink": {
						"type": "AzurePostgreSQLSink",
						"writeBatchSize": 1000000,
						"writeBatchTimeout": "00:30:00",
						"writeMethod": "CopyCommand"
					},
					"enableStaging": false,
					"parallelCopies": 8,
					"dataIntegrationUnits": 8,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": false,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DS_V1_PRODUCTION",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "DS_V2_ORDER_DB_PRODUCTION",
						"type": "DatasetReference",
						"parameters": {
							"table_name": "order_product"
						}
					}
				]
			}
		],
		"folder": {
			"name": "Order DB"
		},
		"annotations": []
	}
}