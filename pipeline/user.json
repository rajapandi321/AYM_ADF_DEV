{
	"name": "user",
	"properties": {
		"activities": [
			{
				"name": "Copy data1",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "PostgreSqlV2Source",
						"query": "with cte as\r\n(SELECT\r\n  u.id,\r\n  CASE\r\n    WHEN u.deleted_at IS NOT NULL THEN TRUE\r\n    ELSE FALSE\r\n  END AS is_deleted,\r\n  u.created_at,\r\n  u.updated_at,\r\n  LEFT(COALESCE(u.first_name, ''), 40) AS first_name,\r\n  LEFT(COALESCE(u.last_name, ''), 40) AS last_name,\r\n  u.email,\r\n  'others' as gender,\r\n  COALESCE(CONCAT('+', u.mobile_number_country_code),'') AS country_code,\r\n  LEFT(COALESCE(CASE\r\n    WHEN u.mobile_phone_number LIKE CONCAT(\r\n      '+', u.mobile_number_country_code,\r\n      '%'\r\n      ) THEN SUBSTRING(\r\n      u.mobile_phone_number,\r\n      CHAR_LENGTH(u.mobile_number_country_code) + 2\r\n      )\r\n    WHEN u.mobile_phone_number LIKE CONCAT(u.mobile_number_country_code, '%') THEN SUBSTRING(\r\n      u.mobile_phone_number,\r\n      CHAR_LENGTH(u.mobile_number_country_code) + 1\r\n      )\r\n    ELSE COALESCE(u.mobile_phone_number, '')\r\n  END, ''), 16) AS mobile_number,\r\n  cast(u.dob as Text) as dob ,\r\n  COALESCE(u.referral_code, '') AS referral_code,\r\n  CASE WHEN u.locale ='en' THEN 1\r\n\tELSE 2\r\n   END AS language_id,\r\n  a.city,\r\n  a.latitude,\r\n  a.longitude,\r\n--   when country_id is '0' updated as '1' \r\n  CASE\r\n    WHEN a.country_id='0' THEN '1'\r\n    ELSE a.country_id\r\n  END AS country_id,\r\n  True as receive_marketing_promotions,\r\n  case \r\n  \twhen sua.provider = 'google_oauth2' then 'google'\r\n\telse sua.provider end as login_type,\r\n\tsua.uid as social_id,\r\n\t0 as balance,\r\n\tu.blacklisted_at,\r\n\tu.blacklisted_reason,\r\n\tROW_NUMBER() over (partition by u.id order by sua.updated_at desc) as rn\r\n\r\nFROM spree_users u\r\nLEFT JOIN spree_user_addresses ua ON u.id = ua.user_id AND ua.default = TRUE\r\nLEFT JOIN spree_addresses a ON ua.address_id = a.id\r\nleft join spree_user_authentications sua on u.id = sua.user_id \r\nORDER BY u.id ASC)\r\n\r\nselect id, is_deleted, created_at, updated_at, first_name, last_name, email, gender, country_code, mobile_number, dob, referral_code, language_id, city,\r\n\tlatitude, longitude, country_id, receive_marketing_promotions, login_type, social_id, balance, blacklisted_at, blacklisted_reason\r\n\tfrom cte \r\n\twhere rn = 1;"
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings",
							"copyBehavior": "PreserveHierarchy"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings"
						}
					},
					"enableStaging": false,
					"logSettings": {
						"enableCopyActivityLog": true,
						"copyActivityLogSettings": {
							"logLevel": "Warning",
							"enableReliableLogging": false
						},
						"logLocationSettings": {
							"linkedServiceName": {
								"referenceName": "LS_CrossDB_Connection_Storage",
								"type": "LinkedServiceReference"
							}
						}
					},
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "id",
									"type": "Int32",
									"physicalType": "integer"
								},
								"sink": {
									"name": "id",
									"type": "Int32",
									"physicalType": "INT_32"
								}
							},
							{
								"source": {
									"name": "is_deleted",
									"type": "Boolean",
									"physicalType": "boolean"
								},
								"sink": {
									"name": "is_deleted",
									"type": "Boolean",
									"physicalType": "BOOLEAN"
								}
							},
							{
								"source": {
									"name": "created_at",
									"type": "DateTime",
									"physicalType": "timestamp without time zone"
								},
								"sink": {
									"name": "created_at",
									"type": "DateTime",
									"physicalType": "INT_96"
								}
							},
							{
								"source": {
									"name": "updated_at",
									"type": "DateTime",
									"physicalType": "timestamp without time zone"
								},
								"sink": {
									"name": "updated_at",
									"type": "DateTime",
									"physicalType": "INT_96"
								}
							},
							{
								"source": {
									"name": "first_name",
									"type": "String",
									"physicalType": "text"
								},
								"sink": {
									"name": "first_name",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "last_name",
									"type": "String",
									"physicalType": "text"
								},
								"sink": {
									"name": "last_name",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "email",
									"type": "String",
									"physicalType": "character varying"
								},
								"sink": {
									"name": "email",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "gender",
									"type": "String",
									"physicalType": "text"
								},
								"sink": {
									"name": "gender",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "country_code",
									"type": "String",
									"physicalType": "text"
								},
								"sink": {
									"name": "country_code",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "mobile_number",
									"type": "String",
									"physicalType": "text"
								},
								"sink": {
									"name": "mobile_number",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "dob",
									"type": "String",
									"physicalType": "text"
								},
								"sink": {
									"name": "dob",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "referral_code",
									"type": "String",
									"physicalType": "character varying"
								},
								"sink": {
									"name": "referral_code",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "language_id",
									"type": "Int32",
									"physicalType": "integer"
								},
								"sink": {
									"name": "language_id",
									"type": "Int32",
									"physicalType": "INT_32"
								}
							},
							{
								"source": {
									"name": "city",
									"type": "String",
									"physicalType": "character varying"
								},
								"sink": {
									"name": "city",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "latitude",
									"type": "Double",
									"physicalType": "double precision"
								},
								"sink": {
									"name": "latitude",
									"type": "Double",
									"physicalType": "DOUBLE"
								}
							},
							{
								"source": {
									"name": "longitude",
									"type": "Double",
									"physicalType": "double precision"
								},
								"sink": {
									"name": "longitude",
									"type": "Double",
									"physicalType": "DOUBLE"
								}
							},
							{
								"source": {
									"name": "country_id",
									"type": "Int32",
									"physicalType": "integer"
								},
								"sink": {
									"name": "country_id",
									"type": "Int32",
									"physicalType": "INT_32"
								}
							},
							{
								"source": {
									"name": "receive_marketing_promotions",
									"type": "Boolean",
									"physicalType": "boolean"
								},
								"sink": {
									"name": "receive_marketing_promotions",
									"type": "Boolean",
									"physicalType": "BOOLEAN"
								}
							},
							{
								"source": {
									"name": "login_type",
									"type": "String",
									"physicalType": "character varying"
								},
								"sink": {
									"name": "login_type",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "social_id",
									"type": "String",
									"physicalType": "character varying"
								},
								"sink": {
									"name": "social_id",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "balance",
									"type": "Int32",
									"physicalType": "integer"
								},
								"sink": {
									"name": "balance",
									"type": "Int32",
									"physicalType": "INT_32"
								}
							},
							{
								"source": {
									"name": "blacklisted_at",
									"type": "DateTime",
									"physicalType": "timestamp without time zone"
								},
								"sink": {
									"name": "blacklisted_at",
									"type": "DateTime",
									"physicalType": "INT_96"
								}
							},
							{
								"source": {
									"name": "blacklisted_reason",
									"type": "String",
									"physicalType": "character varying"
								},
								"sink": {
									"name": "blacklisted_reason",
									"type": "String",
									"physicalType": "UTF8"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DS_V1_PRODUCTION",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "DS_Intermiadate_Result",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Data flow1",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "Copy data1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "user",
						"type": "DataFlowReference"
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "Lookup1",
				"type": "Lookup",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [
					{
						"activity": "Data flow1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzurePostgreSqlSource",
						"query": "DO $$\nDECLARE\n    max_id INT;\nBEGIN\n    -- Step 1: Get the maximum id from the 'order' table\n    SELECT MAX(id) INTO max_id FROM \"user\";\n    \n    -- Step 2: Alter the sequence to restart with max_id + 1\n    EXECUTE 'ALTER SEQUENCE user_id_seq RESTART WITH ' || (max_id + 1000);\nEND $$;\nSelect 'Updating Sequence ID' as Update;",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_V2_USER_DB_PRODUCTION",
						"type": "DatasetReference",
						"parameters": {
							"table_name": "user"
						}
					}
				}
			}
		],
		"folder": {
			"name": "User DB"
		},
		"annotations": []
	}
}