{
	"name": "promotion_cdc",
	"properties": {
		"activities": [
			{
				"name": "Lookup1",
				"type": "Lookup",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzurePostgreSqlSource",
						"query": "select max(updated_at) as max_updated_date from promotion;",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_V2_STAGE",
						"type": "DatasetReference",
						"parameters": {
							"table_name": "promotion",
							"database_name": "product-db-stage"
						}
					}
				}
			},
			{
				"name": "Set variable1",
				"type": "SetVariable",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [
					{
						"activity": "Lookup1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "max_updated_date",
					"value": {
						"value": "@activity('Lookup1').output.firstRow.max_updated_date",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Copy data1",
				"type": "Copy",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [
					{
						"activity": "Set variable1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "PostgreSqlV2Source",
						"query": "WITH Cte AS (\r\n  SELECT DISTINCT\r\n    sp.id,\r\n    COALESCE(MAX(CASE WHEN spt.locale = 'en' THEN spt.name END), '') AS name_en,\r\n    MAX(CASE WHEN spt.locale = 'en' THEN spt.description END) AS description_en,\r\n    COALESCE(MAX(CASE WHEN spt.locale = 'ar' THEN spt.name END), '') AS name_ar,\r\n    MAX(CASE WHEN spt.locale = 'ar' THEN spt.description END) AS description_ar,\r\n    UPPER(REGEXP_REPLACE(TRANSLATE(MAX(CASE WHEN spt.locale = 'en' THEN spt.name END), ' ', '_'), '[^a-zA-Z0-9_]', '', 'g')) AS code,\r\n    sp.expires_at,\r\n    sp.starts_at,\r\n    COALESCE(sp.usage_limit, 0) AS usage_limit,\r\n    sp.match_policy,\r\n    sp.created_at,\r\n    sp.updated_at,\r\n    sp.per_code_usage_limit,\r\n    sp.apply_automatically,\r\n    sp.deleted_at,\r\n    TRUE AS is_visible\r\n  FROM spree_promotions AS sp\r\n  LEFT JOIN spree_promotion_translations AS spt ON spt.spree_promotion_id = sp.id\r\n  WHERE spt.name IS NOT NULL\r\n  GROUP BY sp.id\r\n  ORDER BY sp.id ASC\r\n)\r\nSELECT\r\n  id,\r\n  name_en,\r\n  description_en,\r\n  name_ar,\r\n  description_ar,\r\n  code,\r\n  expires_at,\r\n  starts_at,\r\n  usage_limit,\r\n  match_policy,\r\n  created_at,\r\n  updated_at,\r\n  per_code_usage_limit,\r\n  apply_automatically,\r\n  deleted_at,\r\n  is_visible\r\nFROM (\r\n  SELECT\r\n    id,\r\n    name_en,\r\n    description_en,\r\n    name_ar,\r\n    description_ar,\r\n    code,\r\n    expires_at,\r\n    starts_at,\r\n    usage_limit,\r\n    match_policy,\r\n    created_at,\r\n    updated_at,\r\n    per_code_usage_limit,\r\n    apply_automatically,\r\n    deleted_at,\r\n    is_visible,\r\n    ROW_NUMBER() OVER (PARTITION BY name_en ORDER BY id) AS rn\r\n  FROM Cte\r\n) AS temp\r\nWHERE rn = 1 and \r\nupdated_at > '@{variables('max_updated_date')}'\r\nORDER BY name_en;"
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DS_V1_DEV",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "DS_Intermiadate_Result",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Data flow1",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "Copy data1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "df_promotion_cdc",
						"type": "DataFlowReference",
						"datasetParameters": {
							"sink1": {
								"table_name": "promotion"
							}
						}
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "Delete1",
				"type": "Delete",
				"dependsOn": [
					{
						"activity": "Data flow1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "DS_Intermiadate_Result",
						"type": "DatasetReference"
					},
					"enableLogging": false,
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					}
				}
			}
		],
		"variables": {
			"max_updated_date": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Product DB CDC"
		},
		"annotations": []
	}
}