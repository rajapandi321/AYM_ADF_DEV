{
	"name": "order_shipment",
	"properties": {
		"activities": [
			{
				"name": "Copy data1",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "PostgreSqlV2Source",
						"query": "WITH cte AS (\n    SELECT  \n        so.id AS id,                        -- shipment_id \n        so.id AS order_id,\n        CASE\n            WHEN so.state = 'delivery' THEN 'delivered'\n            WHEN so.state = 'picking_and_staging_in_progress' THEN 'pending'\n            WHEN so.state = 'payment' THEN 'pending'\n            WHEN so.state = 'complete' THEN 'completed'\n            WHEN so.state = 'confirm' THEN 'pending'\n            WHEN so.state = 'canceled' THEN 'customer_cancelled'\n        END AS order_status,\n        so.created_at,\n        so.updated_at,\n        CAST((so.total * (so.vat_percentage / 100)) AS DOUBLE PRECISION) AS tax_total,\n        so.total,\n        so.order_type,\n        so.supermarket_id,\n        sla.delivery_date,\n        sa.amount AS delivery_charges,\n        FALSE AS is_delivery_on_hold,\n        so.created_at AS processing_start_at,\n        ROW_NUMBER() OVER (PARTITION BY so.id ORDER BY so.id) AS row_num\n    FROM spree_orders so\n    LEFT JOIN danube_slot_to_orders dsto ON dsto.order_id = so.id\n    LEFT JOIN spree_lift_assignments sla ON sla.order_id = so.id\n    LEFT JOIN spree_adjustments sa ON sa.order_id = so.id AND sa.label = 'Express Fee'\n    WHERE so.state != 'cart'\n)\nSELECT *\nFROM cte\nWHERE row_num = 1;"
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings",
							"copyBehavior": "FlattenHierarchy"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "id",
									"type": "Int32",
									"physicalType": "integer"
								},
								"sink": {
									"name": "id",
									"type": "Int32",
									"physicalType": "INT_32"
								}
							},
							{
								"source": {
									"name": "order_id",
									"type": "Int32",
									"physicalType": "integer"
								},
								"sink": {
									"name": "order_id",
									"type": "Int32",
									"physicalType": "INT_32"
								}
							},
							{
								"source": {
									"name": "order_status",
									"type": "String",
									"physicalType": "text"
								},
								"sink": {
									"name": "order_status",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "created_at",
									"type": "DateTime",
									"physicalType": "timestamp without time zone"
								},
								"sink": {
									"name": "created_at",
									"type": "DateTime",
									"physicalType": "INT_96"
								}
							},
							{
								"source": {
									"name": "updated_at",
									"type": "DateTime",
									"physicalType": "timestamp without time zone"
								},
								"sink": {
									"name": "updated_at",
									"type": "DateTime",
									"physicalType": "INT_96"
								}
							},
							{
								"source": {
									"name": "tax_total",
									"type": "Double",
									"physicalType": "double precision"
								},
								"sink": {
									"name": "tax_total",
									"type": "Double",
									"physicalType": "DOUBLE"
								}
							},
							{
								"source": {
									"name": "total",
									"type": "Decimal",
									"physicalType": "numeric"
								},
								"sink": {
									"name": "total",
									"type": "Decimal",
									"physicalType": "DECIMAL"
								}
							},
							{
								"source": {
									"name": "order_type",
									"type": "String",
									"physicalType": "character varying"
								},
								"sink": {
									"name": "order_type",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "supermarket_id",
									"type": "Int32",
									"physicalType": "integer"
								},
								"sink": {
									"name": "supermarket_id",
									"type": "Int32",
									"physicalType": "INT_32"
								}
							},
							{
								"source": {
									"name": "delivery_date",
									"type": "DateTime",
									"physicalType": "date"
								},
								"sink": {
									"name": "delivery_date",
									"type": "DateTime",
									"physicalType": "INT_96"
								}
							},
							{
								"source": {
									"name": "delivery_charges",
									"type": "Decimal",
									"physicalType": "numeric"
								},
								"sink": {
									"name": "delivery_charges",
									"type": "Decimal",
									"physicalType": "DECIMAL"
								}
							},
							{
								"source": {
									"name": "is_delivery_on_hold",
									"type": "Boolean",
									"physicalType": "boolean"
								},
								"sink": {
									"name": "is_delivery_on_hold",
									"type": "Boolean",
									"physicalType": "BOOLEAN"
								}
							},
							{
								"source": {
									"name": "processing_start_at",
									"type": "DateTime",
									"physicalType": "timestamp without time zone"
								},
								"sink": {
									"name": "processing_start_at",
									"type": "DateTime",
									"physicalType": "INT_96"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DS_V1_PRODUCTION",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "DS_Intermiadate_Result",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Data flow1",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "Copy data1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "order_shipment",
						"type": "DataFlowReference"
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "Delete1",
				"type": "Delete",
				"dependsOn": [
					{
						"activity": "Data flow1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "DS_Intermiadate_Result",
						"type": "DatasetReference"
					},
					"enableLogging": false,
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					}
				}
			}
		],
		"folder": {
			"name": "Order DB"
		},
		"annotations": []
	}
}