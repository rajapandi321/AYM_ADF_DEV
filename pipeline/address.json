{
	"name": "address",
	"properties": {
		"activities": [
			{
				"name": "address",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "PostgreSqlV2Source",
						"query": "SELECT \n\tsua.id,\n    CASE\n        WHEN sa.address1 IS NOT NULL AND sa.address2 IS NOT NULL THEN\n            CONCAT(sa.address1, ' ', sa.address2, ', ')\n        WHEN sa.address1 IS NOT NULL THEN\n            CONCAT(sa.address1, ' ')\n        WHEN sa.address2 IS NOT NULL THEN\n            CONCAT(sa.address2, ', ')\n        ELSE ''\n    END AS formatted_address,\n    COALESCE(sst_en.name, sst_ar.name) AS city,\n    COALESCE(scon.name, 'Saudi Arabia') AS country,\n\tCOALESCE(NULLIF(regexp_replace(sa.zipcode, '[^0-9]', '', 'g'), '')::BIGINT, NULL) AS postal_code,\n    sua.created_at,\n    sua.updated_at,\n    COALESCE(sdt_en.name, sdt_ar.name) AS district,\n    COALESCE(sa.latitude, 0) AS latitude,\n    COALESCE(sa.longitude, 0) AS longitude,\n    sua.default AS is_default,\n    sua.user_id AS user_id,\n    'other' AS type,\n\tcase when sa.driver_meta_data is not null then sa.driver_meta_data->>'verified' \n\telse 'false' END AS is_verified,\n    sa.driver_meta_data->>'notes' AS comments\nFROM\n    spree_user_addresses sua\nLEFT JOIN spree_addresses sa ON sua.address_id = sa.id\nLEFT JOIN spree_countries scon ON sa.country_id = scon.id\nLEFT JOIN spree_districts sdist ON sdist.id = sa.district_id\nLEFT JOIN spree_district_translations sdt_en ON sdt_en.spree_district_id = sdist.id AND sdt_en.locale = 'en'\nLEFT JOIN spree_district_translations sdt_ar ON sdt_ar.spree_district_id = sdist.id AND sdt_ar.locale = 'ar'\nLEFT JOIN spree_state_translations sst_en  ON sst_en.id = sa.state_id AND sst_en.locale = 'en'\nLEFT JOIN spree_state_translations sst_ar  ON sst_ar.id = sa.state_id AND sst_ar.locale = 'ar'\nwhere (sa.id is not null and city is not null)\nORDER BY sua.id DESC;"
					},
					"sink": {
						"type": "AzurePostgreSQLSink",
						"writeBatchSize": 1000000,
						"writeBatchTimeout": "00:30:00",
						"writeMethod": "CopyCommand"
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "id",
									"type": "Int32",
									"physicalType": "integer"
								},
								"sink": {
									"name": "id",
									"type": "Int32",
									"physicalType": "integer"
								}
							},
							{
								"source": {
									"name": "created_at",
									"type": "DateTime",
									"physicalType": "timestamp without time zone"
								},
								"sink": {
									"name": "created_at",
									"type": "DateTime",
									"physicalType": "timestamp without time zone"
								}
							},
							{
								"source": {
									"name": "updated_at",
									"type": "DateTime",
									"physicalType": "timestamp without time zone"
								},
								"sink": {
									"name": "updated_at",
									"type": "DateTime",
									"physicalType": "timestamp without time zone"
								}
							},
							{
								"source": {
									"name": "city",
									"type": "String",
									"physicalType": "character varying"
								},
								"sink": {
									"name": "city",
									"type": "String",
									"physicalType": "character varying"
								}
							},
							{
								"source": {
									"name": "is_default",
									"type": "Boolean",
									"physicalType": "boolean"
								},
								"sink": {
									"name": "is_default",
									"type": "Boolean",
									"physicalType": "boolean"
								}
							},
							{
								"source": {
									"name": "longitude",
									"type": "Double",
									"physicalType": "double precision"
								},
								"sink": {
									"name": "longitude",
									"type": "Double",
									"physicalType": "double precision"
								}
							},
							{
								"source": {
									"name": "latitude",
									"type": "Double",
									"physicalType": "double precision"
								},
								"sink": {
									"name": "latitude",
									"type": "Double",
									"physicalType": "double precision"
								}
							},
							{
								"source": {
									"name": "user_id",
									"type": "Int32",
									"physicalType": "integer"
								},
								"sink": {
									"name": "user_id",
									"type": "Int32",
									"physicalType": "integer"
								}
							},
							{
								"source": {
									"name": "country",
									"type": "String",
									"physicalType": "character varying"
								},
								"sink": {
									"name": "country",
									"type": "String",
									"physicalType": "character varying"
								}
							},
							{
								"source": {
									"name": "type",
									"type": "String",
									"physicalType": "text"
								},
								"sink": {
									"name": "type",
									"type": "String",
									"physicalType": "character varying"
								}
							},
							{
								"source": {
									"name": "formatted_address",
									"type": "String",
									"physicalType": "text"
								},
								"sink": {
									"name": "formatted_address",
									"type": "String",
									"physicalType": "character varying"
								}
							},
							{
								"source": {
									"name": "postal_code",
									"type": "Int64",
									"physicalType": "bigint"
								},
								"sink": {
									"name": "postal_code",
									"type": "Int64",
									"physicalType": "bigint"
								}
							},
							{
								"source": {
									"name": "district",
									"type": "String",
									"physicalType": "character varying"
								},
								"sink": {
									"name": "district",
									"type": "String",
									"physicalType": "character varying"
								}
							},
							{
								"source": {
									"name": "is_verified",
									"type": "String",
									"physicalType": "text"
								},
								"sink": {
									"name": "is_verified",
									"type": "Boolean",
									"physicalType": "boolean"
								}
							},
							{
								"source": {
									"name": "comments",
									"type": "String",
									"physicalType": "text"
								},
								"sink": {
									"name": "comments",
									"type": "String",
									"physicalType": "character varying"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DS_V1_PRODUCTION",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "DS_V2_USER_DB_PRODUCTION",
						"type": "DatasetReference",
						"parameters": {
							"table_name": "address"
						}
					}
				]
			}
		],
		"folder": {
			"name": "User DB"
		},
		"annotations": []
	}
}