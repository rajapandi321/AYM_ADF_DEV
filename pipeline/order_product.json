{
	"name": "order_product",
	"properties": {
		"activities": [
			{
				"name": "Copy data1",
				"type": "Copy",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"policy": {
					"timeout": "0.15:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "PostgreSqlV2Source",
						"query": "select sli.id,\n\t\tsli.variant_id as product_variant_id,\n\t\tcoalesce(sli.requested_quantity,0)  as quantity,\n\t\tsli.quantity as picked_quantity,\n\t\tsli.price,\n        sli.created_at,\n        sli.replaced,\n\t\tso.state,\n\t\tCOALESCE(sli.updated_at, CURRENT_TIMESTAMP) AS updated_at,\n\t\tCASE \n            WHEN sli.on_sale = false THEN sli.price\n            ELSE '0.0'\n        END AS action_price,\n        CASE \n            WHEN sli.on_sale = true THEN sli.price\n            ELSE '0'\n        END AS sale_price,\n\t\t0 AS picker_id,\n\t\tsv.product_id,\n\t\tCOALESCE(siu.shipment_id,0) as order_shipment_id,\n\t\tCASE\n            WHEN so.replace_product::varchar = 'true' THEN 'replace-with-similar-product' \n            WHEN so.replace_product::varchar = 'false' THEN 'cancel'\n            ELSE NULL\n        END AS replacement_pref,\n\t\t1 AS category_id,\n\t\t'' AS status\n\t\t\nfrom spree_line_items sli\nLEFT JOIN spree_variants sv ON sv.id = sli.variant_id\nLEFT JOIN spree_orders so ON so.id = sli.order_id\nLEFT JOIN (\n        SELECT DISTINCT ON (line_item_id) * \n        FROM spree_inventory_units\n    ) siu ON siu.line_item_id = sli.id\nwhere (so.state = 'complete' or so.state  = 'delivered') and sli.quantity = 0\nlimit 1000000;"
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings",
							"copyBehavior": "PreserveHierarchy"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings"
						}
					},
					"enableStaging": false,
					"parallelCopies": 8,
					"dataIntegrationUnits": 4,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "id",
									"type": "Int32",
									"physicalType": "integer"
								},
								"sink": {
									"name": "id",
									"type": "Int32",
									"physicalType": "INT_32"
								}
							},
							{
								"source": {
									"name": "product_variant_id",
									"type": "Int32",
									"physicalType": "integer"
								},
								"sink": {
									"name": "product_variant_id",
									"type": "Int32",
									"physicalType": "INT_32"
								}
							},
							{
								"source": {
									"name": "quantity",
									"type": "Int32",
									"physicalType": "integer"
								},
								"sink": {
									"name": "quantity",
									"type": "Int32",
									"physicalType": "INT_32"
								}
							},
							{
								"source": {
									"name": "picked_quantity",
									"type": "Int32",
									"physicalType": "integer"
								},
								"sink": {
									"name": "picked_quantity",
									"type": "Int32",
									"physicalType": "INT_32"
								}
							},
							{
								"source": {
									"name": "price",
									"type": "Decimal",
									"physicalType": "numeric"
								},
								"sink": {
									"name": "price",
									"type": "Decimal",
									"physicalType": "DECIMAL"
								}
							},
							{
								"source": {
									"name": "created_at",
									"type": "DateTime",
									"physicalType": "timestamp without time zone"
								},
								"sink": {
									"name": "created_at",
									"type": "DateTime",
									"physicalType": "INT_96"
								}
							},
							{
								"source": {
									"name": "replaced",
									"type": "Boolean",
									"physicalType": "boolean"
								},
								"sink": {
									"name": "replaced",
									"type": "Boolean",
									"physicalType": "BOOLEAN"
								}
							},
							{
								"source": {
									"name": "state",
									"type": "String",
									"physicalType": "character varying"
								},
								"sink": {
									"name": "order_state",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "updated_at",
									"type": "DateTime",
									"physicalType": "timestamp with time zone"
								},
								"sink": {
									"name": "updated_at",
									"type": "DateTime",
									"physicalType": "INT_96"
								}
							},
							{
								"source": {
									"name": "action_price",
									"type": "Decimal",
									"physicalType": "numeric"
								},
								"sink": {
									"name": "action_price",
									"type": "Decimal",
									"physicalType": "DECIMAL"
								}
							},
							{
								"source": {
									"name": "sale_price",
									"type": "Decimal",
									"physicalType": "numeric"
								},
								"sink": {
									"name": "sale_price",
									"type": "Decimal",
									"physicalType": "DECIMAL"
								}
							},
							{
								"source": {
									"name": "picker_id",
									"type": "Int32",
									"physicalType": "integer"
								},
								"sink": {
									"name": "picker_id",
									"type": "Int32",
									"physicalType": "INT_32"
								}
							},
							{
								"source": {
									"name": "product_id",
									"type": "Int32",
									"physicalType": "integer"
								},
								"sink": {
									"name": "product_id",
									"type": "Int32",
									"physicalType": "INT_32"
								}
							},
							{
								"source": {
									"name": "order_shipment_id",
									"type": "Int32",
									"physicalType": "integer"
								},
								"sink": {
									"name": "order_shipment_id",
									"type": "Int32",
									"physicalType": "INT_32"
								}
							},
							{
								"source": {
									"name": "replacement_pref",
									"type": "String",
									"physicalType": "text"
								},
								"sink": {
									"name": "replacement_pref",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "category_id",
									"type": "Int32",
									"physicalType": "integer"
								},
								"sink": {
									"name": "category_id",
									"type": "Int32",
									"physicalType": "INT_32"
								}
							},
							{
								"source": {
									"name": "status",
									"type": "String",
									"physicalType": "text"
								},
								"sink": {
									"name": "status",
									"type": "String",
									"physicalType": "UTF8"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DS_V1_PRODUCTION",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "DS_Intermiadate_Result",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Data flow1",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "Copy data1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "order_product",
						"type": "DataFlowReference"
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "Delete1",
				"type": "Delete",
				"dependsOn": [
					{
						"activity": "Data flow1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "DS_Intermiadate_Result",
						"type": "DatasetReference"
					},
					"enableLogging": false,
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					}
				}
			}
		],
		"folder": {
			"name": "Order DB"
		},
		"annotations": []
	}
}